[tool:pytest]
# Pytest configuration for FloodRisk project

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 7.0

# Add src to Python path
pythonpath = src

# Default options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --maxfail=1
    --show-capture=no
    --durations=10
    --color=yes
    
# Test markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    gpu: marks tests that require GPU
    external: marks tests that require external services
    api: marks API tests
    model: marks ML model tests
    preprocessing: marks data preprocessing tests
    database: marks database tests
    redis: marks Redis tests
    geospatial: marks geospatial processing tests

# Warnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ImportWarning
    ignore:.*GDAL.*:RuntimeWarning
    ignore:.*shapely.*:RuntimeWarning
    ignore:.*torch.*:UserWarning

# Coverage settings (when using --cov)
[coverage:run]
source = src
omit = 
    */tests/*
    */venv/*
    */virtualenv/*
    */.venv/*
    */migrations/*
    */alembic/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

show_missing = True
precision = 2

[coverage:html]
directory = htmlcov